{"F:\\working\\javascript\\knetminer\\graphql-grand\\api\\src\\schemas\\client.js":{"path":"F:\\working\\javascript\\knetminer\\graphql-grand\\api\\src\\schemas\\client.js","statementMap":{"0":{"start":{"line":3,"column":29},"end":{"line":3,"column":93}},"1":{"start":{"line":5,"column":29},"end":{"line":5,"column":92}},"2":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":24}},"4":{"start":{"line":13,"column":14},"end":{"line":13,"column":39}},"5":{"start":{"line":15,"column":17},"end":{"line":15,"column":62}},"6":{"start":{"line":17,"column":14},"end":{"line":17,"column":55}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}},"8":{"start":{"line":23,"column":13},"end":{"line":23,"column":52}},"9":{"start":{"line":24,"column":13},"end":{"line":24,"column":59}},"10":{"start":{"line":25,"column":13},"end":{"line":25,"column":58}},"11":{"start":{"line":27,"column":15},"end":{"line":43,"column":2}},"12":{"start":{"line":44,"column":0},"end":{"line":44,"column":24}}},"fnMap":{},"branchMap":{"0":{"loc":{"start":{"line":23,"column":13},"end":{"line":23,"column":52}},"type":"binary-expr","locations":[{"start":{"line":23,"column":13},"end":{"line":23,"column":44}},{"start":{"line":23,"column":48},"end":{"line":23,"column":52}}],"line":23},"1":{"loc":{"start":{"line":24,"column":13},"end":{"line":24,"column":59}},"type":"binary-expr","locations":[{"start":{"line":24,"column":13},"end":{"line":24,"column":44}},{"start":{"line":24,"column":48},"end":{"line":24,"column":59}}],"line":24},"2":{"loc":{"start":{"line":25,"column":13},"end":{"line":25,"column":58}},"type":"binary-expr","locations":[{"start":{"line":25,"column":13},"end":{"line":25,"column":44}},{"start":{"line":25,"column":48},"end":{"line":25,"column":58}}],"line":25}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1},"f":{},"b":{"0":[1,0],"1":[1,0],"2":[1,0]},"inputSourceMap":{"version":3,"sources":["client.js"],"names":["dotenv","config","port","process","env","GRAPHQL_SERVER_PORT","host","GRAPHQL_SERVER_HOST","path","GRAPHQL_SERVER_PATH","client","ApolloClient","link","HttpLink","uri","fetch","cache","InMemoryCache","defaultOptions","watchQuery","fetchPolicy","errorPolicy","query"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;AACAA,gBAAOC,MAAP,G,CAEA;;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,IAAhD;AACA,MAAMC,IAAI,GAAGH,OAAO,CAACC,GAAR,CAAYG,mBAAZ,IAAmC,WAAhD;AACA,MAAMC,IAAI,GAAGL,OAAO,CAACC,GAAR,CAAYK,mBAAZ,IAAmC,UAAhD,C,CAEA;;AACO,MAAMC,MAAM,GAAG,IAAIC,oBAAJ,CAAiB;AACrCC,EAAAA,IAAI,EAAE,IAAIC,gBAAJ,CAAa;AAAEC,IAAAA,GAAG,EAAG,UAASR,IAAK,IAAGJ,IAAK,GAAEM,IAAK,EAArC;AAAwCO,IAAAA,KAAK,EAAEA;AAA/C,GAAb,CAD+B;AAErCC,EAAAA,KAAK,EAAE,IAAIC,qBAAJ,EAF8B;AAGrCC,EAAAA,cAAc,EAAE;AACdC,IAAAA,UAAU,EAAE;AACVC,MAAAA,WAAW,EAAE,UADH;AAEVC,MAAAA,WAAW,EAAE;AAFH,KADE;AAKdC,IAAAA,KAAK,EAAE;AACLF,MAAAA,WAAW,EAAE,UADR;AAELC,MAAAA,WAAW,EAAE;AAFR;AALO;AAHqB,CAAjB,CAAf","sourceRoot":"F:\\working\\javascript\\knetminer\\graphql-grand\\api\\src\\schemas\\","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client'\r\nimport fetch from 'node-fetch'\r\nimport dotenv from 'dotenv'\r\n\r\n// set environment variables from .env\r\ndotenv.config()\r\n\r\n// Specify host, port and path for GraphQL endpoint\r\nconst port = process.env.GRAPHQL_SERVER_PORT || 4001\r\nconst host = process.env.GRAPHQL_SERVER_HOST || 'localhost'\r\nconst path = process.env.GRAPHQL_SERVER_PATH || '/graphql'\r\n\r\n// Used by Ava tests\r\nexport const client = new ApolloClient({\r\n  link: new HttpLink({ uri: `http://${host}:${port}${path}`, fetch: fetch }),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      fetchPolicy: 'no-cache',\r\n      errorPolicy: 'ignore',\r\n    },\r\n    query: {\r\n      fetchPolicy: 'no-cache',\r\n      errorPolicy: 'all',\r\n    },\r\n  },\r\n})\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5a1eff6c84c582dd9c9494f2385f28d0b75b2e10","contentHash":"c0b41eefa182981d6d593f074bd2c560cb3552ef0a0096aabd969edeff489041"}}